spring:
  profile:
    active: int-test
  sleuth:
    opentracing:
      enabled: true
    baggage:
      correlation-enabled: true
      correlation-fields: x-request-id, X-Primary-Request-URL
      remote-fields: x-request-id, x-access-token, X-Primary-Request-URL

storage:
  lowcode-file-storage:
    type: ceph
    backend:
      ceph:
        http-endpoint: http://localhost:8100
        access-key: access-key
        secret-key: secret-key
        bucket: bucket
  datafactory-file-storage:
    type: ceph
    backend:
      ceph:
        http-endpoint: http://localhost:8100
        access-key: access-key
        secret-key: secret-key
        bucket: bucket
  backend:
    ceph:
      http-endpoint: http://localhost:8100
      access-key: access-key
      secret-key: secret-key
      bucket: bucket

dso:
  url: http://localhost:8081

s3:
  config:
    client:
      protocol: http
    options:
      pathStyleAccess: true

keycloak:
  url: http://localhost:8200
  realms:
    - officer-portal
    - citizen-portal
    - external-system

logging:
  level:
    org.jooq.tools.LoggerListener: TRACE
feign:
  client:
    config:
      default:
        connectTimeout: 4000
        readTimeout: 30000

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: 'health, prometheus'
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
      group:
        liveness:
          include: livenessState, livenessResponseCheck
        readiness:
          include: readinessState, db, webServices, kafka
    loggers:
      enabled: true
    prometheus:
      enabled: true

probes:
  liveness:
    failureThreshold: 10

audit:
  kafka:
    bootstrap: localhost:9092
    topic: audit-events
    schema-registry-url: http://localhost:8081
    ssl:
      enabled: false
ceph:
  http-endpoint: http://localhost:8100
  access-key: access-key
  secret-key: secret-key
  bucket: bucket

datafactory-response-ceph:
  bucket: response-ceph-bucket
  access-key: access-key
  secret-key: secret-key
  httpEndpoint: http://localhost:8100

data-platform:
  kafka:
    bootstrap: ${spring.embedded.kafka.brokers}
    enabled: true
    max-request-size: 1000000
    consumer:
      enabled: true
      group-id: registry-kafka-api
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      trusted-packages: '*'
      custom-config:
        "[spring.deserializer.key.delegate.class]": org.apache.kafka.common.serialization.StringDeserializer
        "[spring.deserializer.value.delegate.class]": org.springframework.kafka.support.serializer.JsonDeserializer
        "[isolation.level]": read_committed
        "[enable.auto.commit]": false
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      enabled: true
      custom-config:
        "[spring.serializer.key.delegate.class]": org.apache.kafka.common.serialization.StringSerializer
        "[spring.serializer.value.delegate.class]": org.springframework.kafka.support.serializer.JsonSerializer
        "[enable.idempotence]": true
    topic-properties:
      creation:
        enabled: true
        num-partitions: 1
        replication-factor: 1
    topics:
      data-load-csv-inbound: data-load.csv.inbound
      data-load-csv-outbound: data-load.csv.outbound
    error-handler:
      initial-interval: 1500
      max-elapsed-time: 6000
      multiplier: 2
  kafka-request:
    validation:
      enabled: false
  jwt:
    validation:
      enabled: false

platform:
  logging:
    aspect:
      enabled: false
    primary-url:
      enabled: true

logbook:
  feign:
    enabled: true
  info-logging:
    enabled: true
  strategy: without-body
  exclude:
    - /actuator/**
  obfuscate:
    headers:
      - x-access-token
      - cookie